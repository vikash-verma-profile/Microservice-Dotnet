name: dockercompose5574416164028453229
services:
  aspnetrunbasics:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: WebApps/AspnetRunBasics/Dockerfile
    container_name: aspnetrunbasics
    depends_on:
      basket.api:
        condition: service_started
        required: true
      catalog.api:
        condition: service_started
        required: true
      discount.api:
        condition: service_started
        required: true
      ocelotapigw:
        condition: service_started
        required: true
      ordering.api:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApiSettings:GatewayAddress: http://ocelotapigw
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: aspnetrunbasics
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8006"
        protocol: tcp
  basket.api:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
        required: true
      rabbitmq:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
      ElasticConfiguration:Uri: http://elasticsearch:9200
      EventBusSettings:HostAddress: amqp://guest:guest@rabbitmq:5672
      GrpcSettings:DiscountUrl: http://discount.grpc
    image: basketapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
  catalog.api:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: catalogapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8000"
        protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  discount.api:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: Services/Discount/Discount.API/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: discountapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8002"
        protocol: tcp
  discount.grpc:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    container_name: discount.grpc
    depends_on:
      discountdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: discountgrpc
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8003"
        protocol: tcp
  discountdb:
    container_name: discountdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume: {}
  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.monitoring.enabled: "true"
      xpack.watcher.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9200
        published: "9200"
        protocol: tcp
    volumes:
      - type: volume
        source: elasticsearch-data
        target: /usr/share/elasticsearch/data
        volume: {}
  kibana:
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_started
        required: true
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    image: docker.elastic.co/kibana/kibana:7.9.2
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5601
        published: "5601"
        protocol: tcp
  ocelotapigw:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
    container_name: ocelotapigw
    depends_on:
      basket.api:
        condition: service_started
        required: true
      catalog.api:
        condition: service_started
        required: true
      discount.api:
        condition: service_started
        required: true
      ordering.api:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: ocelotapigw
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8010"
        protocol: tcp
  orderdb:
    container_name: orderdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: SwN12345678
    image: mcr.microsoft.com/mssql/server:2017-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
  ordering.api:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    container_name: ordering.api
    depends_on:
      orderdb:
        condition: service_started
        required: true
      rabbitmq:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:OrderingConnectionString: Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678
      ElasticConfiguration:Uri: http://elasticsearch:9200
      EventBusSettings:HostAddress: amqp://guest:guest@rabbitmq:5672
    image: orderingapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8004"
        protocol: tcp
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aspnetrun.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5050"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: pgadmin_data
        target: /root/.pgadmin
        volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 9000
        published: "9000"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          create_host_path: true
      - type: volume
        source: portainer_data
        target: /data
        volume: {}
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
  shopping.aggregator:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    container_name: shopping.aggregator
    depends_on:
      basket.api:
        condition: service_started
        required: true
      catalog.api:
        condition: service_started
        required: true
      ordering.api:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApiSettings:BasketUrl: http://basket.api
      ApiSettings:CatalogUrl: http://catalog.api
      ApiSettings:OrderingUrl: http://ordering.api
      ElasticConfiguration:Uri: http://elasticsearch:9200
    image: shoppingaggregator
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8005"
        protocol: tcp
  webstatus:
    build:
      context: C:\Users\Level Up Solutions 1\Downloads\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src
      dockerfile: WebApps/WebStatus/Dockerfile
    container_name: webstatus
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      HealthChecksUI__HealthChecks__0__Name: Catalog Health Check
      HealthChecksUI__HealthChecks__0__Uri: http://catalog.api/hc
      HealthChecksUI__HealthChecks__1__Name: Basket Health Check
      HealthChecksUI__HealthChecks__1__Uri: http://basket.api/hc
      HealthChecksUI__HealthChecks__2__Name: Discount Health Check
      HealthChecksUI__HealthChecks__2__Uri: http://discount.api/hc
      HealthChecksUI__HealthChecks__3__Name: Ordering Health Check
      HealthChecksUI__HealthChecks__3__Uri: http://ordering.api/hc
      HealthChecksUI__HealthChecks__4__Name: Shopping Aggregator Health Check
      HealthChecksUI__HealthChecks__4__Uri: http://shopping.aggregator/hc
      HealthChecksUI__HealthChecks__5__Name: AspnetRunBasics WebMVC Health Check
      HealthChecksUI__HealthChecks__5__Uri: http://aspnetrunbasics/hc
    image: webstatus
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8007"
        protocol: tcp
networks:
  default:
    name: dockercompose5574416164028453229_default
volumes:
  elasticsearch-data:
    name: dockercompose5574416164028453229_elasticsearch-data
  mongo_data:
    name: dockercompose5574416164028453229_mongo_data
  pgadmin_data:
    name: dockercompose5574416164028453229_pgadmin_data
  portainer_data:
    name: dockercompose5574416164028453229_portainer_data
  postgres_data:
    name: dockercompose5574416164028453229_postgres_data